name: "publish"
on:
  push:
    tags:
      - 'v*'     # Trigger on tags starting with 'v'

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Install dependencies for Ubuntu (if platform is Ubuntu)
      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # Step 3: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16 # Specify the Node.js version you want to use

      # Step 4: Install Node.js dependencies
      - name: Install Node.js dependencies
        run: npm install # Run npm install to install frontend dependencies

      # Step 5: Install Rust stable
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Targets are only used on macOS runners; this speeds up Windows/Linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # Step 6: Cache Rust builds for faster builds
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

     
      # Step 8: Use Tauri Action to build and release
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # Automatically replaces __VERSION__ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}